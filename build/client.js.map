{
  "version": 3,
  "file": "client.js",
  "sourceRoot": "../src/",
  "sources": [
    "client.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "angular = window.angular or require 'angular'\r\nmoduleName = 'rs-auth'\r\nangular.module moduleName, [\r\n  'rs-rest'\r\n  'rs-storage'\r\n]\r\n.factory 'auth', ($injector, $http, $timeout, $state, $q, storage, rest) ->\r\n  user = null\r\n  socket = null\r\n  if $injector.has 'socket'\r\n    socket = $injector.get 'socket'\r\n  redirectToLogin = (promise) ->\r\n    user = null\r\n    $timeout ->\r\n      $state.go 'login'\r\n    promise?.resolve false\r\n  checkRoles = (role) ->\r\n    role = [role] if typeof(role) is 'string'\r\n    if role and user?.role\r\n      return true if user.role.includes r for r in role\r\n    return false\r\n  refreshLogin: (promise, permittedRoles) ->\r\n    if permittedRoles\r\n      $http.post '/api/refresh-login'\r\n      .then (res) ->\r\n        if res.status is 401\r\n          user = null\r\n          return promise.resolve false\r\n        if res.status is 200\r\n          if res.data is 'unauthorized'\r\n            return redirectToLogin promise\r\n          user = res.data\r\n          if user.role\r\n            for role in user.role\r\n              if permittedRoles.includes role\r\n                return promise.resolve()\r\n            return redirectToLogin promise\r\n        promise.resolve()\r\n    else\r\n      promise.resolve()\r\n  getToken: (username, password) ->\r\n    defer = $q.defer()\r\n    $http\r\n      url: '/auth/token'\r\n      method: 'POST'\r\n      headers:\r\n        Authorization: 'Basic ' + btoa(username) + ':' + btoa(password)\r\n    .then (res) ->\r\n      if res.status is 200\r\n        storage.set 'token', res.data\r\n        defer.resolve()\r\n    defer.promise\r\n  refreshToken: (token) ->\r\n    defer = $q.defer()\r\n    $http.post '/auth/refresh', token\r\n    .then (res) ->\r\n      if res.status is 200\r\n        storage.set 'token', res.data\r\n        return defer.resolve res.data\r\n      defer.reject()\r\n    , ->\r\n      defer.reject()\r\n    defer.promise\r\n  clearToken: ->\r\n    user = null\r\n    storage.set 'token', ''\r\n  getUser: ->\r\n    user\r\n  loggedIn: ->\r\n    user or ['invited', 'forgot', 'forgotResponse'].includes $state.current.name\r\n  isAuthorized: (stateName) ->\r\n    if user\r\n      role = $state.get(stateName)?.data?.auth\r\n      checkRoles role\r\n    false\r\n  canEdit: (stateName) ->\r\n    if user\r\n      roles = $state.get(stateName)?.data?.edit or $state.get(stateName)?.data?.auth\r\n      return checkRoles roles\r\n    false\r\n.run ($rootScope, auth) ->\r\n  $rootScope.auth = auth\r\nmodule.exports = moduleName"
  ]
}